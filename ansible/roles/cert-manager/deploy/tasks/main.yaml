---
- name: Deploy and configure Cert-Manager
  delegate_to: "{{ groups['rke2_servers'][0] }}"
  run_once: true
  block:
    - name: Add Cert-Manager Helm repository
      kubernetes.core.helm_repository:
        name: "{{ cert_manager_config.helm.repo_name }}"
        repo_url: "{{ cert_manager_config.helm.repo_url }}"
      tags:
        - cert-manager
        - helm

    - name: Template Cert-Manager values
      ansible.builtin.template:
        src: templates/cert-manager-values.yaml.j2
        dest: /tmp/cert-manager-values.yaml
        mode: "0644"
      tags:
        - cert-manager
        - deploy

    - name: Deploy Cert-Manager
      kubernetes.core.helm:
        name: cert-manager
        chart_ref: "{{ cert_manager_config.helm.chart_name }}"
        release_namespace: "{{ cert_manager_config.namespace }}"
        create_namespace: true
        wait: true
        wait_timeout: "{{ cert_manager_config.wait_timeout }}"
        values_files:
          - /tmp/cert-manager-values.yaml
        kubeconfig: "{{ cert_manager_kubernetes_config.path }}"
      tags:
        - cert-manager
        - deploy

    - name: Template Cloudflare API token secret
      ansible.builtin.template:
        src: templates/cloudflare-api-token-secret.yaml.j2
        dest: /tmp/cloudflare-api-token-secret.yaml
        mode: "0644"
      tags:
        - cert-manager
        - secret

    - name: Template ClusterIssuer
      ansible.builtin.template:
        src: templates/cluster-issuer.yaml.j2
        dest: /tmp/cluster-issuer.yaml
        mode: "0644"
      tags:
        - cert-manager
        - issuer

    - name: Apply Cloudflare API token secret and ClusterIssuer
      kubernetes.core.k8s:
        src: "{{ item }}"
        state: present
        kubeconfig: "{{ cert_manager_kubernetes_config.path }}"
      loop:
        - /tmp/cloudflare-api-token-secret.yaml
        - /tmp/cluster-issuer.yaml
      tags:
        - cert-manager
        - issuer
