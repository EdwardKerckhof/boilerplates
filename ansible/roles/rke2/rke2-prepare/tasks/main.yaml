---
- name: Run preflight checks
  ansible.builtin.import_tasks: preflight.yml
  tags: ["rke2", "preflight"]

# Directory setup
- name: Create directory for RKE2 config
  ansible.builtin.file:
    path: "/etc/rancher/rke2"
    state: directory
    mode: "0644"
  tags: ["rke2", "directories"]

- name: Create directory for RKE2 token
  ansible.builtin.file:
    path: "/var/lib/rancher/rke2/server"
    state: directory
    mode: "0644"
  tags: ["rke2", "directories"]

# Server configuration
- name: Deploy RKE2 server Configuration
  ansible.builtin.template:
    src: templates/rke2-server-config.j2
    dest: /etc/rancher/rke2/config.yaml
    owner: root
    group: root
    mode: "0644"
  when: inventory_hostname in groups['rke2_servers']
  tags: ["rke2", "config"]

# Service setup
- name: Create systemd service file for RKE2 server
  ansible.builtin.template:
    src: templates/rke2-server.service.j2
    dest: /etc/systemd/system/rke2-server.service
    owner: root
    group: root
    mode: "0644"
  when: inventory_hostname in groups['rke2_servers']
  tags: ["rke2", "services"]

- name: Create systemd service file for RKE2 agent
  ansible.builtin.template:
    src: templates/rke2-agent.service.j2
    dest: /etc/systemd/system/rke2-agent.service
    owner: root
    group: root
    mode: "0644"
  when: inventory_hostname in groups['rke2_agents']
  tags: ["rke2", "services"]

# Server initialization
- name: Ensure RKE2 server is enabled and running
  ansible.builtin.systemd:
    name: rke2-server
    enabled: true
    state: restarted
    daemon_reload: true
  when: inventory_hostname in groups['rke2_servers'][0]
  tags: ["rke2", "services"]

# Wait for node token
- name: Wait for node-token
  ansible.builtin.wait_for:
    path: /var/lib/rancher/rke2/server/node-token
  when: inventory_hostname == groups['rke2_servers'][0]
  tags: ["rke2", "token"]

- name: Wait for kubectl
  ansible.builtin.wait_for:
    path: /var/lib/rancher/rke2/bin/kubectl
  when: inventory_hostname == groups['rke2_servers'][0]
  tags: ["rke2", "kubectl"]

# Kubectl setup
- name: Copy kubectl to user bin
  ansible.builtin.copy:
    src: /var/lib/rancher/rke2/bin/kubectl
    dest: /usr/local/bin/kubectl
    mode: "0755"
    remote_src: true
  become: true
  when: inventory_hostname == groups['rke2_servers'][0]
  tags: ["rke2", "kubectl"]

- name: Wait for kubectl
  ansible.builtin.wait_for:
    path: /usr/local/bin/kubectl
  when: inventory_hostname == groups['rke2_servers'][0]
  tags: ["rke2", "kubectl"]

# Token handling
- name: Register node-token file access mode
  ansible.builtin.stat:
    path: /var/lib/rancher/rke2/server
  register: p
  tags: ["rke2", "token"]

- name: Change file access for node-token
  ansible.builtin.file:
    path: /var/lib/rancher/rke2/server
    mode: "g+rx,o+rx"
  when: inventory_hostname == groups['rke2_servers'][0]
  tags: ["rke2", "token"]

- name: Fetch the token from the first server node
  ansible.builtin.slurp:
    src: /var/lib/rancher/rke2/server/token
  register: rke2_token
  when: inventory_hostname == groups['rke2_servers'][0]
  run_once: true
  tags: ["rke2", "token"]

- name: Save Master node-token for later
  ansible.builtin.set_fact:
    token: "{{ rke2_token.content | b64decode | regex_replace('\n', '') }}"
  tags: ["rke2", "token"]

- name: Restore node-token file access
  ansible.builtin.file:
    path: /var/lib/rancher/rke2/server
    mode: "{{ p.stat.mode }}"
  when: inventory_hostname == groups['rke2_servers'][0]
  tags: ["rke2", "token"]

# Kubectl config setup
- name: Ensure .kube directory exists in user's home
  ansible.builtin.file:
    path: "/home/{{ ansible_user }}/.kube"
    state: directory
    mode: "0755"
  become: true
  tags: ["rke2", "kubectl"]

- name: Copy config file to user home directory
  ansible.builtin.copy:
    src: /etc/rancher/rke2/rke2.yaml
    dest: "/home/{{ ansible_user }}/.kube/config"
    remote_src: true
    owner: "{{ ansible_user }}"
    mode: "u=rw,g=,o="
  when: inventory_hostname == groups['rke2_servers'][0]
  notify: Clean temporary files
  tags: ["rke2", "kubectl"]

- name: Replace IP address with server1
  ansible.builtin.replace:
    path: /home/{{ ansible_user }}/.kube/config
    regexp: "127.0.0.1"
    replace: "{{ hostvars['server-01']['ansible_host'] }}"
  when: inventory_hostname == groups['rke2_servers'][0]
  tags: ["rke2", "kubectl"]
